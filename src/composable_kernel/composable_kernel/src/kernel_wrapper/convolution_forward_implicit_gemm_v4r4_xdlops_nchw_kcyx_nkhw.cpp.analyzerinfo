<?xml version="1.0"?>
<analyzerinfo hash="2862068208661185222">
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp">
            <location file="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp" line="336" column="51"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp">
            <location file="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp" line="338" column="51"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp">
            <location file="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp" line="340" column="53"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp">
            <location file="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp" line="343" column="14"/>
        </error>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp:211:9" my-argnr="4" my-argname="p_a_k0_m_k1_grid_desc" file="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp" line="336" col="63" value="0"/>
    <unsafe-usage my-id="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp:211:9" my-argnr="5" my-argname="p_b_k0_n_k1_grid_desc" file="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp" line="338" col="63" value="0"/>
    <unsafe-usage my-id="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp:211:9" my-argnr="6" my-argname="p_c_m0_m1_m2_n_grid_desc" file="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp" line="340" col="65" value="0"/>
    <unsafe-usage my-id="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp:211:9" my-argnr="7" my-argname="p_c_blockid_to_m0_n0_block_cluster_adaptor" file="/workspaces/MIOpen/src/composable_kernel/composable_kernel/src/kernel_wrapper/convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw.cpp" line="343" col="26" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functioncall functionName="ABDataTypeEnum"/>
    <functioncall functionName="ABlockTransferDstScalarPerVector_K1"/>
    <functioncall functionName="ABlockTransferSrcScalarPerVector"/>
    <functioncall functionName="ABlockTransferSrcVectorDim"/>
    <functioncall functionName="AGridStepHacks"/>
    <functioncall functionName="AK0MK1GridDesc"/>
    <functioncall functionName="AThreadTransferSrcResetCoordinateAfterRun"/>
    <functioncall functionName="AccDataTypeEnum"/>
    <functioncall functionName="BBlockTransferDstScalarPerVector_K1"/>
    <functioncall functionName="BBlockTransferSrcScalarPerVector"/>
    <functioncall functionName="BBlockTransferSrcVectorDim"/>
    <functioncall functionName="BGridStepHacks"/>
    <functioncall functionName="BK0NK1GridDesc"/>
    <functioncall functionName="BThreadTransferSrcResetCoordinateAfterRun"/>
    <functioncall functionName="BlockSize"/>
    <functioncall functionName="CDataTypeEnum"/>
    <functioncall functionName="CGridStepHacks"/>
    <functioncall functionName="CK_MAX_THREAD_PER_BLOCK"/>
    <functioncall functionName="CK_MIN_BLOCK_PER_CU"/>
    <functioncall functionName="CK_PARAM_ABDataTypeEnum"/>
    <functioncall functionName="CK_PARAM_ABlockTransferDstScalarPerVector_K1"/>
    <functioncall functionName="CK_PARAM_ABlockTransferSrcAccessOrder"/>
    <functioncall functionName="CK_PARAM_ABlockTransferSrcScalarPerVector"/>
    <functioncall functionName="CK_PARAM_ABlockTransferSrcVectorDim"/>
    <functioncall functionName="CK_PARAM_ABlockTransferThreadClusterArrangeOrder"/>
    <functioncall functionName="CK_PARAM_ABlockTransferThreadClusterLengths_K0_M_K1"/>
    <functioncall functionName="CK_PARAM_ABlockTransferThreadSliceLengths_K0_M_K1"/>
    <functioncall functionName="CK_PARAM_AThreadTransferSrcResetCoordinateAfterRun"/>
    <functioncall functionName="CK_PARAM_AccDataTypeEnum"/>
    <functioncall functionName="CK_PARAM_BBlockTransferDstScalarPerVector_K1"/>
    <functioncall functionName="CK_PARAM_BBlockTransferSrcAccessOrder"/>
    <functioncall functionName="CK_PARAM_BBlockTransferSrcScalarPerVector"/>
    <functioncall functionName="CK_PARAM_BBlockTransferSrcVectorDim"/>
    <functioncall functionName="CK_PARAM_BBlockTransferThreadClusterArrangeOrder"/>
    <functioncall functionName="CK_PARAM_BBlockTransferThreadClusterLengths_K0_N_K1"/>
    <functioncall functionName="CK_PARAM_BBlockTransferThreadSliceLengths_K0_N_K1"/>
    <functioncall functionName="CK_PARAM_BThreadTransferSrcResetCoordinateAfterRun"/>
    <functioncall functionName="CK_PARAM_BlockSize"/>
    <functioncall functionName="CK_PARAM_CDataTypeEnum"/>
    <functioncall functionName="CK_PARAM_CThreadTransferDstScalarPerVector"/>
    <functioncall functionName="CK_PARAM_CThreadTransferSrcDstAccessOrder"/>
    <functioncall functionName="CK_PARAM_CThreadTransferSrcDstVectorDim"/>
    <functioncall functionName="CK_PARAM_K1"/>
    <functioncall functionName="CK_PARAM_KPerBlock"/>
    <functioncall functionName="CK_PARAM_MPerBlock"/>
    <functioncall functionName="CK_PARAM_MPerWave"/>
    <functioncall functionName="CK_PARAM_MRepeat"/>
    <functioncall functionName="CK_PARAM_NPerBlock"/>
    <functioncall functionName="CK_PARAM_NPerWave"/>
    <functioncall functionName="CK_PARAM_NRepeat"/>
    <functioncall functionName="CMNGridDesc"/>
    <functioncall functionName="CThreadTransferDstScalarPerVector"/>
    <functioncall functionName="CThreadTransferSrcDstVectorDim"/>
    <functioncall functionName="DataTypeEnum_t"/>
    <functioncall functionName="GetSharedMemoryNumberOfByte"/>
    <functioncall functionName="I0"/>
    <functioncall functionName="I1"/>
    <functioncall functionName="I2"/>
    <functioncall functionName="K1"/>
    <functioncall functionName="KPerBlock"/>
    <functioncall functionName="MPerBlock"/>
    <functioncall functionName="MPerWave"/>
    <functioncall functionName="MRepeat"/>
    <functioncall functionName="MakeCBlockClusterAdaptor"/>
    <functioncall functionName="MakeCM0M1M2NGridDescriptor"/>
    <functioncall functionName="NPerBlock"/>
    <functioncall functionName="NPerWave"/>
    <functioncall functionName="NRepeat"/>
    <functioncall functionName="Run"/>
    <functioncall functionName="Set"/>
    <functioncall functionName="a_k0_m_k1_grid_desc"/>
    <functioncall functionName="a_k0_m_k1_grid_desc_tmp"/>
    <functioncall functionName="b_k0_n_k1_grid_desc"/>
    <functioncall functionName="b_k0_n_k1_grid_desc_tmp"/>
    <functioncall functionName="bool"/>
    <functioncall functionName="c"/>
    <functioncall functionName="c_blockid_to_m0_n0_block_cluster_adaptor"/>
    <functioncall functionName="c_blockid_to_m0_n0_block_cluster_adaptor_tmp"/>
    <functioncall functionName="c_m0_m1_m2_n_grid_desc"/>
    <functioncall functionName="c_m0_m1_m2_n_grid_desc_tmp"/>
    <functioncall functionName="c_m_n_grid_desc"/>
    <functioncall functionName="const"/>
    <functioncall functionName="convDilationX"/>
    <functioncall functionName="convDilationY"/>
    <functioncall functionName="convStrideH"/>
    <functioncall functionName="convStrideW"/>
    <functioncall functionName="convolution_forward_implicit_gemm_v4r4_xdlops_nchw_kcyx_nkhw"/>
    <functioncall functionName="decltype"/>
    <functioncall functionName="false"/>
    <functioncall functionName="hi"/>
    <functioncall functionName="ho"/>
    <functioncall functionName="if"/>
    <functioncall functionName="in_n_c_hi_wi_desc"/>
    <functioncall functionName="k"/>
    <functioncall functionName="leftPadH"/>
    <functioncall functionName="leftPadW"/>
    <functioncall functionName="make_naive_tensor_descriptor_packed"/>
    <functioncall functionName="make_tuple"/>
    <functioncall functionName="n"/>
    <functioncall functionName="out_n_k_ho_wo_desc"/>
    <functioncall functionName="p_a_grid"/>
    <functioncall functionName="p_a_k0_m_k1_grid_desc"/>
    <functioncall functionName="p_b_grid"/>
    <functioncall functionName="p_b_k0_n_k1_grid_desc"/>
    <functioncall functionName="p_c_blockid_to_m0_n0_block_cluster_adaptor"/>
    <functioncall functionName="p_c_grid"/>
    <functioncall functionName="p_c_m0_m1_m2_n_grid_desc"/>
    <functioncall functionName="p_shared_block"/>
    <functioncall functionName="reinterpret_cast"/>
    <functioncall functionName="remove_cv_t"/>
    <functioncall functionName="rightPadH"/>
    <functioncall functionName="rightPadW"/>
    <functioncall functionName="shared_block_size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="transform_forward_convolution_into_gemm_v4r4r2_nchw_kcyx_nkhw_pad"/>
    <functioncall functionName="wei_k_c_y_x_desc"/>
    <functioncall functionName="wi"/>
    <functioncall functionName="wo"/>
    <functioncall functionName="x"/>
    <functioncall functionName="y"/>
  </FileInfo>
</analyzerinfo>
